<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@

    
	The docbook-to-man binary is found in the docbook-to-man package.
	Please remember that if you create the nroff version in one of the
	debian/rules file targets (such as build), you will need to include
	docbook-to-man in your Build-Depends control field.

  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>Uwe</firstname>">
  <!ENTITY dhsurname   "<surname>Steinmann</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>June 30, 2005</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>uwe@steinmann.cx</email>">
  <!ENTITY dhusername  "Uwe Steinmann">
  <!ENTITY dhucpackage "<refentrytitle>PXCRYPT</refentrytitle>">
  <!ENTITY dhpackage   "pxcrypt">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2005</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose>Decrypt and encrypt Paradox files</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>

      <arg><option>-h | --help <replaceable></replaceable></option></arg>
      <arg><option>--verbose <replaceable></replaceable></option></arg>

      <arg><option>--mode=MODE <replaceable></replaceable></option></arg>
      <arg><option>--password=WORD <replaceable></replaceable></option></arg>
      <arg><option>-o FILE | --output-file=FILE <replaceable></replaceable></option></arg>
      <arg>FILE </arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>This manual page documents the
      <command>&dhpackage;</command> command.</para>

    <para>&dhpackage; decrypts and encrypts Paradox files based on the
	    pxlib library. It does it in
		  a rather unconventional but very effective way for maximum speed.
			The header of the input file is - except for two fields - copied to
			the output file. There should be hardly any problems reading the
			output file with other programs, even in cases where the input file
			cannot be propperly read by pxlib (e.g. when opened with pxview).
      </para>
  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <para>The program follows the usual &gnu; command line syntax,
      with long options starting with two dashes (`-').  A summary of
      options is included below.</para>

    <variablelist>
      <varlistentry>
        <term><option>-h</option>
          <option>--help</option>
        </term>
        <listitem>
          <para>Show summary of options.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--version</option>
        </term>
        <listitem>
          <para>Show version of program.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-o</option>
          <option>--output-file</option>
        </term>
        <listitem>
          <para>All output except for usage information and error messages
					 will be written to the given file instead of stdout.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-v</option>
          <option>--verbose</option>
        </term>
        <listitem>
          <para>Output some more information from the header. This option is only
					 needed if you want see some internal information which are usually
					 not of any interessed.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--mode=MODE</option>
        </term>
        <listitem>
          <para>Sets the ouput mode. This options provides a different way
					 to set the output format. --mode=decrypt is equivalent to -d, and
					 --mode=encrypt to -e</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--password=WORD</option>
        </term>
        <listitem>
          <para>Sets the password. The password is not needed for decryption
					 but only for encryption.</para>
        </listitem>
      </varlistentry>
    </variablelist>

		<para>The none optional parameter FILE is the Paradox file which shall
		 be decrypted or encrypted.</para>
  </refsect1>
  <refsect1>
    <title>HOW IT WORKS</title>

    <para>Paradox uses a very weak algorithmn for encryption and also stores
		  the encryption key in the unencrypted header of the file. This makes
			it trivial to decrypt any paradox file even without knowing the
			password. The algorithmn is not public but can be easily reengineered
			from a dll from the paradox software.</para>
		<para>When encrypting a file, first a four byte checksum will be
		  calculated from a password. The checksum is used as a key for
			the encryption algorithmn and also stored in the header of the
			file. When decrypting a file, it is sufficient to take the checksum
			from the header and feed the decryption algorithmn with it. The password
			isn't needed anymore. Other software may need the password for
			authorization puposes. If you employ such a software without knowing
			the password of your paradox file, you may use pxcrypt to reencrypt
			the file. There is currently no way to guess a password from an
			encrypted file, though it is probably not too difficult to
			implement.</para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>pxview(1)</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &lt;&dhemail;&gt;.
      Permission is
      granted to copy, distribute and/or modify this document under
      the terms of the &gnu; Free Documentation
      License, Version 1.1 or any later version published by the Free
      Software Foundation; with no Invariant Sections, no Front-Cover
      Texts and no Back-Cover Texts.</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


